<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>生命不息 折腾不止</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://konata.tech/"/>
  <updated>2021-01-04T04:12:28.715Z</updated>
  <id>http://konata.tech/</id>
  
  <author>
    <name>Konata</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 编程</title>
    <link href="http://konata.tech/2021/01/01/LinuxProgramming/"/>
    <id>http://konata.tech/2021/01/01/LinuxProgramming/</id>
    <published>2021-01-01T09:23:35.000Z</published>
    <updated>2021-01-04T04:12:28.715Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;Linux-进程存储管理&quot;&gt;&lt;a href=&quot;#Linux-进程存储管理&quot; class=&quot;headerlink&quot; title=&quot;Linux 进程存储管理&quot;&gt;&lt;/a&gt;Linux 进程存储管理&lt;/h2&gt;&lt;h3 id=&quot;存储类型比较&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="Miscellaneous" scheme="http://konata.tech/categories/Miscellaneous/"/>
    
    
      <category term="Linux" scheme="http://konata.tech/tags/Linux/"/>
    
      <category term="C" scheme="http://konata.tech/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>KubeEdge 部署记录</title>
    <link href="http://konata.tech/2020/12/22/KubeEdgeDeployLog/"/>
    <id>http://konata.tech/2020/12/22/KubeEdgeDeployLog/</id>
    <published>2020-12-22T08:52:59.000Z</published>
    <updated>2021-01-04T06:27:58.830Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;云端-Cloud-Side&quot;&gt;&lt;a href=&quot;#云端-Cloud-Side&quot; class=&quot;headerlink&quot; title=&quot;云端 (Cloud Side)&quot;&gt;&lt;/a&gt;云端 (Cloud Side)&lt;/h2&gt;&lt;p&gt;此处安装云端的环境是 VMWare 安装
        
      
    
    </summary>
    
      <category term="Ops" scheme="http://konata.tech/categories/Ops/"/>
    
    
      <category term="Kubernetes" scheme="http://konata.tech/tags/Kubernetes/"/>
    
      <category term="KubeEdge" scheme="http://konata.tech/tags/KubeEdge/"/>
    
      <category term="K8S" scheme="http://konata.tech/tags/K8S/"/>
    
      <category term="边缘云" scheme="http://konata.tech/tags/%E8%BE%B9%E7%BC%98%E4%BA%91/"/>
    
      <category term="Docker" scheme="http://konata.tech/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg 命令整理</title>
    <link href="http://konata.tech/2020/12/22/ffmpeg/"/>
    <id>http://konata.tech/2020/12/22/ffmpeg/</id>
    <published>2020-12-21T16:17:37.000Z</published>
    <updated>2020-12-22T08:50:46.462Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;无损切割音频&quot;&gt;&lt;a href=&quot;#无损切割音频&quot; class=&quot;headerlink&quot; title=&quot;无损切割音频&quot;&gt;&lt;/a&gt;无损切割音频&lt;/h3&gt;&lt;p&gt;&lt;code&gt;ss&lt;/code&gt; : 起始秒&lt;br&gt;&lt;code&gt;t&lt;/code&gt; :
        
      
    
    </summary>
    
      <category term="Codec" scheme="http://konata.tech/categories/Codec/"/>
    
    
      <category term="ffmpeg" scheme="http://konata.tech/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>Windows 批处理中的变量</title>
    <link href="http://konata.tech/2020/12/06/windowsBatchVariable/"/>
    <id>http://konata.tech/2020/12/06/windowsBatchVariable/</id>
    <published>2020-12-06T08:42:42.000Z</published>
    <updated>2020-12-06T09:22:44.508Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;环境变量&quot;&gt;&lt;a href=&quot;#环境变量&quot; class=&quot;headerlink&quot; title=&quot;环境变量&quot;&gt;&lt;/a&gt;环境变量&lt;/h2&gt;&lt;p&gt;&lt;code&gt;%varname%&lt;/code&gt; ，例如 &lt;code&gt;%PATH%&lt;/code&gt; 
        
      
    
    </summary>
    
      <category term="Ops" scheme="http://konata.tech/categories/Ops/"/>
    
    
      <category term="Windows" scheme="http://konata.tech/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>ARM 汇编笔记</title>
    <link href="http://konata.tech/2020/11/18/armAssembly/"/>
    <id>http://konata.tech/2020/11/18/armAssembly/</id>
    <published>2020-11-18T05:49:56.000Z</published>
    <updated>2020-11-24T02:38:40.420Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;GNU-ARM-汇编程序格式&quot;&gt;&lt;a href=&quot;#GNU-ARM-汇编程序格式&quot; class=&quot;headerlink&quot; title=&quot;GNU ARM 汇编程序格式&quot;&gt;&lt;/a&gt;GNU ARM 汇编程序格式&lt;/h2&gt;&lt;h3 id=&quot;整体结构&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="Ops" scheme="http://konata.tech/categories/Ops/"/>
    
    
      <category term="arm" scheme="http://konata.tech/tags/arm/"/>
    
      <category term="assembly" scheme="http://konata.tech/tags/assembly/"/>
    
  </entry>
  
  <entry>
    <title>Linux 中配置路由</title>
    <link href="http://konata.tech/2020/10/25/routeCommand/"/>
    <id>http://konata.tech/2020/10/25/routeCommand/</id>
    <published>2020-10-25T04:26:36.000Z</published>
    <updated>2020-10-25T05:43:15.585Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;查看路由表&quot;&gt;&lt;a href=&quot;#查看路由表&quot; class=&quot;headerlink&quot; title=&quot;查看路由表&quot;&gt;&lt;/a&gt;查看路由表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;netstat
        
      
    
    </summary>
    
      <category term="Ops" scheme="http://konata.tech/categories/Ops/"/>
    
    
      <category term="Linux" scheme="http://konata.tech/tags/Linux/"/>
    
      <category term="route" scheme="http://konata.tech/tags/route/"/>
    
  </entry>
  
  <entry>
    <title>给 Windows 驱动签名</title>
    <link href="http://konata.tech/2020/10/16/signWindowsDrive/"/>
    <id>http://konata.tech/2020/10/16/signWindowsDrive/</id>
    <published>2020-10-16T09:03:01.000Z</published>
    <updated>2020-12-06T08:43:34.581Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;从 Windows 8
        
      
    
    </summary>
    
      <category term="Ops" scheme="http://konata.tech/categories/Ops/"/>
    
    
      <category term="驱动" scheme="http://konata.tech/tags/%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="证书" scheme="http://konata.tech/tags/%E8%AF%81%E4%B9%A6/"/>
    
      <category term="签名" scheme="http://konata.tech/tags/%E7%AD%BE%E5%90%8D/"/>
    
      <category term="Windows" scheme="http://konata.tech/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>逻辑位移</title>
    <link href="http://konata.tech/2020/10/11/logicalShift/"/>
    <id>http://konata.tech/2020/10/11/logicalShift/</id>
    <published>2020-10-11T09:18:25.000Z</published>
    <updated>2020-10-11T09:22:00.687Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;逻辑左移&quot;&gt;&lt;a href=&quot;#逻辑左移&quot; class=&quot;headerlink&quot; title=&quot;逻辑左移&quot;&gt;&lt;/a&gt;逻辑左移&lt;/h2&gt;&lt;p&gt;左移运算符 &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 是双目运算符。&lt;strong&gt;左移 &lt;code&gt;n&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="Algorithm" scheme="http://konata.tech/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://konata.tech/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>JSON Web Token</title>
    <link href="http://konata.tech/2020/10/07/JSONWebToken/"/>
    <id>http://konata.tech/2020/10/07/JSONWebToken/</id>
    <published>2020-10-07T10:51:27.000Z</published>
    <updated>2020-10-07T11:21:45.499Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;JWT(JSON Web Token) 是一个基于 JSON 的开放标准，用于通信双方之间传递安全信息的简洁的、URL 安全的表述性声明规范，经常用于身份验证。  &lt;/p&gt;
&lt;h2 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="Tools" scheme="http://konata.tech/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://konata.tech/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>事件冒泡</title>
    <link href="http://konata.tech/2020/10/04/eventBubble/"/>
    <id>http://konata.tech/2020/10/04/eventBubble/</id>
    <published>2020-10-04T07:38:38.000Z</published>
    <updated>2020-10-04T07:59:22.609Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;当一个元素接收到事件的时候，会把他接收到的事件传给自己的父级，一直到 &lt;code&gt;window&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://konata.tech/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://konata.tech/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>XML 与 JSON</title>
    <link href="http://konata.tech/2020/10/02/jsonAndXml/"/>
    <id>http://konata.tech/2020/10/02/jsonAndXml/</id>
    <published>2020-10-02T02:36:01.000Z</published>
    <updated>2020-10-02T03:10:19.277Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;XML 与 JSON 都可以用来描述或者存储数据，两者都有各自的优点，使用场景取决于需求。  &lt;/p&gt;
&lt;h2 id=&quot;XML&quot;&gt;&lt;a href=&quot;#XML&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="Tools" scheme="http://konata.tech/categories/Tools/"/>
    
    
      <category term="JSON" scheme="http://konata.tech/tags/JSON/"/>
    
      <category term="XML" scheme="http://konata.tech/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 中的继承</title>
    <link href="http://konata.tech/2020/10/01/inheritanceInJavaScript/"/>
    <id>http://konata.tech/2020/10/01/inheritanceInJavaScript/</id>
    <published>2020-10-01T05:36:36.000Z</published>
    <updated>2020-10-01T10:00:14.845Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;继承是面向对象软件技术当中的一个概念，与多态、封装共为面向对象的三个基本特征。继承可以使得子类具有父类的属性和方法或者重新定义、追加属性和方法等。  &lt;/p&gt;
&lt;h2 id=&quot;原型链继承&quot;&gt;&lt;a href=&quot;#原型链继承&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://konata.tech/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://konata.tech/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>浏览器事件总结</title>
    <link href="http://konata.tech/2020/09/28/browserEvent/"/>
    <id>http://konata.tech/2020/09/28/browserEvent/</id>
    <published>2020-09-28T00:11:31.000Z</published>
    <updated>2020-09-28T00:30:20.337Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;常用浏览器事件与 DOM 事件，包括鼠标事件、键盘事件、框架/对象事件、表单事件、剪贴板事件、打印事件、拖动事件、多媒体事件、动画事件、过渡事件。&lt;/p&gt;
&lt;h2 id=&quot;浏览器事件&quot;&gt;&lt;a href=&quot;#浏览器事件&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="Browser" scheme="http://konata.tech/categories/Browser/"/>
    
    
      <category term="JavaScript" scheme="http://konata.tech/tags/JavaScript/"/>
    
      <category term="Browser" scheme="http://konata.tech/tags/Browser/"/>
    
  </entry>
  
  <entry>
    <title>防抖与节流</title>
    <link href="http://konata.tech/2020/09/24/debounceAndThrottle/"/>
    <id>http://konata.tech/2020/09/24/debounceAndThrottle/</id>
    <published>2020-09-24T03:33:19.000Z</published>
    <updated>2020-09-24T03:36:39.389Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;防抖 (debounce) 与节流 (throttle) 都是控制事件处理函数执行频率的方法，当函数会进行 DOM 操作或者具有请求服务器等行为并且作为高频事件例如 &lt;code&gt;onscroll&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://konata.tech/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://konata.tech/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 严格模式</title>
    <link href="http://konata.tech/2020/09/22/strictMode/"/>
    <id>http://konata.tech/2020/09/22/strictMode/</id>
    <published>2020-09-22T01:18:32.000Z</published>
    <updated>2020-09-22T03:13:41.854Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;JavaScript 的严格模式 (strict mode)，即在严格的条件下运行。严格模式消除了 Javascript 语法的一些不合理、不严谨之处，减少一些怪异行为；消除代码运行的一些不安全之处，保证代码运行的安全；提高了引擎的效率，增加运行速度；为未来新的
        
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://konata.tech/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://konata.tech/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 中的堆栈</title>
    <link href="http://konata.tech/2020/09/18/stackAndHeap/"/>
    <id>http://konata.tech/2020/09/18/stackAndHeap/</id>
    <published>2020-09-18T07:53:17.000Z</published>
    <updated>2020-09-18T08:40:57.157Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;堆 (Heap) 是动态分配的内存，大小不定也不会自动释放，栈 (stack) 为自动分配的内存空间，在代码执行过程中自动释放。  &lt;/p&gt;
&lt;h2 id=&quot;栈&quot;&gt;&lt;a href=&quot;#栈&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://konata.tech/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://konata.tech/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>在 Liunx 中查找文件</title>
    <link href="http://konata.tech/2020/09/14/findCommand/"/>
    <id>http://konata.tech/2020/09/14/findCommand/</id>
    <published>2020-09-14T07:31:39.000Z</published>
    <updated>2020-09-14T08:04:48.576Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;locate&quot;&gt;&lt;a href=&quot;#locate&quot; class=&quot;headerlink&quot; title=&quot;locate&quot;&gt;&lt;/a&gt;locate&lt;/h2&gt;&lt;p&gt;使用 &lt;code&gt;locate&lt;/code&gt; 命令需要安装 &lt;code&gt;mlocate&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="Ops" scheme="http://konata.tech/categories/Ops/"/>
    
    
      <category term="Linux" scheme="http://konata.tech/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Thunk 函数</title>
    <link href="http://konata.tech/2020/09/13/thunkFunction/"/>
    <id>http://konata.tech/2020/09/13/thunkFunction/</id>
    <published>2020-09-13T14:45:30.000Z</published>
    <updated>2020-09-13T14:57:03.539Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;编译器的求值策略通常分为传值调用以及传名调用，Thunk 函数是应用于编译器的传名调用实现，往往是将参数放到一个临时函数之中，再将这个临时函数传入函数体，这个临时函数就叫做 Thunk 函数。  &lt;/p&gt;
&lt;h2 id=&quot;求值策略&quot;&gt;&lt;a href=&quot;#求值策略&quot;
        
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://konata.tech/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://konata.tech/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>事件流模型</title>
    <link href="http://konata.tech/2020/09/11/eventStreamModel/"/>
    <id>http://konata.tech/2020/09/11/eventStreamModel/</id>
    <published>2020-09-11T12:31:43.000Z</published>
    <updated>2020-09-11T13:13:18.696Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;事件捕获 (Event Capturing) 是一种从上而下的传播方式，以 &lt;code&gt;click&lt;/code&gt; 事件为例，其会从最外层根节向内传播到达点击的节点，为从最外层节点逐渐向内传播直到目标节点的方式。&lt;br&gt;事件冒泡 (Event Bubbling)
        
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://konata.tech/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://konata.tech/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>闭包</title>
    <link href="http://konata.tech/2020/09/10/closures/"/>
    <id>http://konata.tech/2020/09/10/closures/</id>
    <published>2020-09-10T02:52:40.000Z</published>
    <updated>2020-09-10T12:31:49.091Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;函数和对其词法环境 (lexical environment) 的引用捆绑在一起构成&lt;strong&gt;闭包 (closure)&lt;/strong&gt;，也就是说，闭包可以让你从内部函数访问外部函数作用域。在
        
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://konata.tech/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://konata.tech/tags/JavaScript/"/>
    
  </entry>
  
</feed>
